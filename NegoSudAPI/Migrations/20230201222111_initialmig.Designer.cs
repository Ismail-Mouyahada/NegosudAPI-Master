// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NegoSudAPI.Data;

#nullable disable

namespace NegoSudAPI.Migrations
{
    [DbContext(typeof(NegosudDbContext))]
    [Migration("20230201222111_initialmig")]
    partial class initialmig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NegoSudAPI.Models.Adresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdresseComplet")
                        .HasColumnType("longtext");

                    b.Property<string>("AdressePrincipal")
                        .HasColumnType("longtext");

                    b.Property<string>("CodePostal")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Pays")
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.Property<string>("Rue")
                        .HasColumnType("longtext");

                    b.Property<int?>("UtilisateurId")
                        .HasColumnType("int");

                    b.Property<string>("Ville")
                        .HasColumnType("longtext");

                    b.Property<string>("typeAdresse")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("adresses");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Catalogue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<int?>("ProduitId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProduitId");

                    b.ToTable("catalogues");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameCategorie")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Commande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCommande")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("Remise")
                        .HasColumnType("float");

                    b.Property<string>("Statut")
                        .HasColumnType("longtext");

                    b.Property<int?>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("commandes");
                });

            modelBuilder.Entity("NegoSudAPI.Models.ElemCommande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Alerte")
                        .HasColumnType("longtext");

                    b.Property<int?>("CommandeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("QuantiteCommande")
                        .HasColumnType("int");

                    b.Property<int?>("SeuilAlerte")
                        .HasColumnType("int");

                    b.Property<float>("TotalCommande")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CommandeId");

                    b.ToTable("elemCommandes");
                });

            modelBuilder.Entity("NegoSudAPI.Models.ElemFacture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FactureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactureId");

                    b.ToTable("elemFactures");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Facture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CommandeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("FactureTotal")
                        .HasColumnType("float");

                    b.Property<string>("Reference")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CommandeId");

                    b.ToTable("factures");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Fournisseur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Fix")
                        .HasColumnType("longtext");

                    b.Property<string>("NomFournisseur")
                        .HasColumnType("longtext");

                    b.Property<string>("Pays")
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.Property<string>("Reputation")
                        .HasColumnType("longtext");

                    b.Property<string>("Rue")
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .HasColumnType("longtext");

                    b.Property<string>("Ville")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("fournisseurs");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Inventaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Appelation")
                        .HasColumnType("longtext");

                    b.Property<string>("Classement")
                        .HasColumnType("longtext");

                    b.Property<string>("Couleur")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("MagasinId")
                        .HasColumnType("int");

                    b.Property<string>("Millesime")
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<int>("QuantiteStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MagasinId");

                    b.ToTable("inventaires");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Magasin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasColumnType("longtext");

                    b.Property<string>("CodePostal")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Fix")
                        .HasColumnType("longtext");

                    b.Property<string>("NomMagasin")
                        .HasColumnType("longtext");

                    b.Property<string>("Pays")
                        .HasColumnType("longtext");

                    b.Property<int?>("ProducteurId")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.Property<string>("Rue")
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProducteurId");

                    b.ToTable("magasins");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Pays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NamePays")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("pays");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Producteur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Fix")
                        .HasColumnType("longtext");

                    b.Property<int?>("FournisseurId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("longtext");

                    b.Property<string>("NomProducteur")
                        .HasColumnType("longtext");

                    b.Property<string>("Pays")
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .HasColumnType("longtext");

                    b.Property<string>("RaisonSocial")
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.Property<string>("Reputation")
                        .HasColumnType("longtext");

                    b.Property<string>("Rue")
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .HasColumnType("longtext");

                    b.Property<string>("Ville")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FournisseurId");

                    b.ToTable("producteurs");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float?>("Alcool")
                        .HasColumnType("float");

                    b.Property<string>("Aliments")
                        .HasColumnType("longtext");

                    b.Property<string>("Ancien")
                        .HasColumnType("longtext");

                    b.Property<int?>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Conservation")
                        .HasColumnType("longtext");

                    b.Property<string>("Couleur")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("ElemCommandeId")
                        .HasColumnType("int");

                    b.Property<int?>("ElemFactureId")
                        .HasColumnType("int");

                    b.Property<string>("Expiration")
                        .HasColumnType("longtext");

                    b.Property<int?>("FournisseurId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePrincipal")
                        .HasColumnType("longtext");

                    b.Property<int?>("InventaireId")
                        .HasColumnType("int");

                    b.Property<string>("NomProduit")
                        .HasColumnType("longtext");

                    b.Property<float?>("Prix_carton")
                        .HasColumnType("float");

                    b.Property<float?>("Prix_unitaire")
                        .HasColumnType("float");

                    b.Property<int?>("ProducteurId")
                        .HasColumnType("int");

                    b.Property<string>("Raisins")
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.Property<float?>("Remise")
                        .HasColumnType("float");

                    b.Property<string>("Resumee")
                        .HasColumnType("longtext");

                    b.Property<string>("SKU")
                        .HasColumnType("longtext");

                    b.Property<float?>("TVA")
                        .HasColumnType("float");

                    b.Property<float>("Volume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("ElemCommandeId");

                    b.HasIndex("ElemFactureId");

                    b.HasIndex("FournisseurId");

                    b.HasIndex("InventaireId");

                    b.HasIndex("ProducteurId");

                    b.ToTable("produits");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameRegion")
                        .HasColumnType("longtext");

                    b.Property<int?>("PaysId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaysId");

                    b.ToTable("regions");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateInscription")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsBusiness")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MotDePasse")
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .HasColumnType("longtext");

                    b.Property<string>("NomUtilisateur")
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .HasColumnType("longtext");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SIREN")
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("utilisateurs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "mouyahada@gmail.com",
                            IsBusiness = false,
                            MotDePasse = "Password",
                            Nom = "Mouyahada",
                            NomUtilisateur = "Ismail",
                            Prenom = "Ismail",
                            Role = 1,
                            SIREN = "FR5664544654"
                        });
                });

            modelBuilder.Entity("NegoSudAPI.Models.Ville", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameVille")
                        .HasColumnType("longtext");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("villes");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Adresse", b =>
                {
                    b.HasOne("NegoSudAPI.Models.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Catalogue", b =>
                {
                    b.HasOne("NegoSudAPI.Models.Produit", "Produit")
                        .WithMany()
                        .HasForeignKey("ProduitId");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Commande", b =>
                {
                    b.HasOne("NegoSudAPI.Models.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("NegoSudAPI.Models.ElemCommande", b =>
                {
                    b.HasOne("NegoSudAPI.Models.Commande", "Commande")
                        .WithMany("ElemCommandes")
                        .HasForeignKey("CommandeId");

                    b.Navigation("Commande");
                });

            modelBuilder.Entity("NegoSudAPI.Models.ElemFacture", b =>
                {
                    b.HasOne("NegoSudAPI.Models.Facture", "Facture")
                        .WithMany()
                        .HasForeignKey("FactureId");

                    b.Navigation("Facture");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Facture", b =>
                {
                    b.HasOne("NegoSudAPI.Models.Commande", "Commande")
                        .WithMany()
                        .HasForeignKey("CommandeId");

                    b.Navigation("Commande");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Inventaire", b =>
                {
                    b.HasOne("NegoSudAPI.Models.Magasin", "Magasin")
                        .WithMany()
                        .HasForeignKey("MagasinId");

                    b.Navigation("Magasin");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Magasin", b =>
                {
                    b.HasOne("NegoSudAPI.Models.Producteur", "Producteur")
                        .WithMany()
                        .HasForeignKey("ProducteurId");

                    b.Navigation("Producteur");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Producteur", b =>
                {
                    b.HasOne("NegoSudAPI.Models.Fournisseur", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("FournisseurId");

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Produit", b =>
                {
                    b.HasOne("NegoSudAPI.Models.Categorie", "Categorie")
                        .WithMany("Produit")
                        .HasForeignKey("CategorieId");

                    b.HasOne("NegoSudAPI.Models.ElemCommande", null)
                        .WithMany("Produits")
                        .HasForeignKey("ElemCommandeId");

                    b.HasOne("NegoSudAPI.Models.ElemFacture", null)
                        .WithMany("Produits")
                        .HasForeignKey("ElemFactureId");

                    b.HasOne("NegoSudAPI.Models.Fournisseur", null)
                        .WithMany("Produits")
                        .HasForeignKey("FournisseurId");

                    b.HasOne("NegoSudAPI.Models.Inventaire", null)
                        .WithMany("Produits")
                        .HasForeignKey("InventaireId");

                    b.HasOne("NegoSudAPI.Models.Producteur", "Producteur")
                        .WithMany()
                        .HasForeignKey("ProducteurId");

                    b.Navigation("Categorie");

                    b.Navigation("Producteur");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Region", b =>
                {
                    b.HasOne("NegoSudAPI.Models.Pays", "Pays")
                        .WithMany()
                        .HasForeignKey("PaysId");

                    b.Navigation("Pays");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Ville", b =>
                {
                    b.HasOne("NegoSudAPI.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Categorie", b =>
                {
                    b.Navigation("Produit");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Commande", b =>
                {
                    b.Navigation("ElemCommandes");
                });

            modelBuilder.Entity("NegoSudAPI.Models.ElemCommande", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("NegoSudAPI.Models.ElemFacture", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Fournisseur", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("NegoSudAPI.Models.Inventaire", b =>
                {
                    b.Navigation("Produits");
                });
#pragma warning restore 612, 618
        }
    }
}
